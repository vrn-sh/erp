# database
POSTGRES_DB=voron
POSTGRES_USER=YOUR_USER_NAME
POSTGRES_PASSWORD=postgres          # OR a more secure password if running in production
POSTGRES_HOST=localhost             # OR 'db' if you are using docker`
POSTGRES_PORT=5432                  # OR 5431 if running docker-compose-dev.yml
POSTGRES_DATA=/var/lib/postgresql/data/pgdata

# reverse-proxy layer
NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx

# object-storage
MINIO_HOST=YOUR_S3_ENDPOINT         # (or 's3:9000' if PRODUCTION != 1)
MINIO_ROOT_USER=YOUR_SECRET_ACCESS_KEY
MINIO_ROOT_PASSWORD=YOUR_SECRET_PASSWORD

# api-layer
WAPP_API_KEY=SOME_RANDOM_KEY
WAPP_API_URL=https://some.url.com/wapp

SAAS_API_KEY=SOME_RANDOM_KEY
SAAS_API_URL=https://some.url.com/saas

DJANGO_SECRET_KEY=SOME_RANDOM_KEY   # will be regenerated at runtime if running on Docker
DOMAIN_NAME=localhost:8080          # or your domain name (eg: example.com). If using docker-compose-dev.yml, use 'localhost:3000'
PRODUCTION=0                        # or '1' if deployed in user-facing setup
IN_CONTAINER=1                      # will automatically be set to '1' by entrypoint.sh

# third-party
SENDGRID_API_KEY=YOUR_SENGRID_KEY
SENDGRID_SENDER=YOUR_SENGRID_SENDER
SENDGRID_MFA_TEMPLATE_ID=YOUR_SENGRID_MFA_TEMPLATE_ID
HUNTER_API_KEY=YOUR_HUNTER_KEY

# API linter stuff (you don't actually need this to run the app, just some for linter)
DJANGO_SETTINGS_MODULE='core.settings'

# PORT MAPPINGS
#
# mainly used for docker-compose.yml (but not only)
# leave by default if you dont know what you are doing
S3_CONSOLE_PORT=9001
S3_PORT=9000
DATABASE_PORT=5432
FRONT_PORT=3000
API_PORT=8000
CACHE_PORT=11211
REVERSE_PROXY_PORT=8080             # locally, this should match DOMAIN_NAME
