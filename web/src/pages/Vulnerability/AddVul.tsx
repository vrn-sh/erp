import React, { useState } from 'react';
import '../EditMission/Mission.scss';
import './Vulnerability.scss';
import '../Settings/Settings.scss';
import { MdUploadFile } from 'react-icons/md';
import SideBar from '../../component/SideBar/SideBar';
import TopBar from '../../component/SideBar/TopBar';

const MAX_IMAGES = 4;

// interface ImageUploadProps {
// Ajoutez ici toutes les props dont vous avez besoin
// }

type InputSizes = 'norm' | 'big' | 'large';

type InputProps = {
    label: string;
    size: InputSizes;
    // showDropdown?: boolean;
};

function Input({ label, size /* , showDropdown */ }: InputProps) {
    const [value, setValue] = useState('');
    // const [dropdownOpen, setDropdownOpen] = useState(false);

    // const handleDropdownToggle = () => {
    //     setDropdownOpen(!dropdownOpen);
    // };
    return (
        <div className={`input input-${size}`}>
            <label htmlFor={`input-${label}`} className="input-label">
                {label}
            </label>
            <input
                id={`input-${label}`}
                type="text"
                value={value}
                onChange={(e) => setValue(e.target.value)}
            />
        </div>
    );
}

// Input.defaultProps = {
//     showDropdown: false,
// };

const CreateMission = () => {
    // appel de l'API pour supprimer le groupe
};
const CancelMission = () => {
    // appel de l'API pour supprimer le groupe
};

export default function AddVulnerability() {
    const [images, setImages] = useState<string[]>([]);

    const handleFileInput = (e: React.ChangeEvent<HTMLInputElement>) => {
        const fileList = e.target.files;
        if (fileList) {
            const newImages = [...images];
            for (
                let i = 0;
                i < fileList.length && newImages.length < MAX_IMAGES;
                i += 1
            ) {
                newImages.push(URL.createObjectURL(fileList[i]));
            }
            setImages(newImages);
        }
    };

    // CrÃ©er une grille d'images
    const imageGrid = [];
    for (let i = 0; i < MAX_IMAGES; i += 2) {
        const row = (
            <div className="image-row" key={i}>
                {images[i] && (
                    <img src={images[i]} alt="" className="uploaded-image" />
                )}
                {images[i + 1] && (
                    <img
                        src={images[i + 1]}
                        alt=""
                        className="uploaded-image"
                    />
                )}
            </div>
        );
        imageGrid.push(row);
    }
    return (
        <div className="dashboard">
            <SideBar />
            <div className="dashboard_container">
                <TopBar />
                <div className="page-info">
                    <div>
                        <h2 style={{ fontSize: '28px', fontFamily: 'Arial' }}>
                            Add Vulnerability
                        </h2>
                    </div>
                    <div className="page-searcher">
                        <label>Search on page</label>
                        <input type="text" placeholder="Search..." />
                    </div>
                </div>
                <div className="general-container">
                    <div
                        style={{
                            textAlign: 'left',
                            marginLeft: '50px',
                            marginBottom: '0px',
                        }}
                    >
                        <h4 style={{ marginBottom: '0px' }}>
                            <span>Add vulnerability to :</span>{' '}
                            <span>janaye.fr</span>
                        </h4>
                    </div>
                    <div className="vuln-form">
                        <div style={{ display: 'flex', width: '100%' }}>
                            <Input
                                label="Select Vulnerability"
                                size="norm"
                                // showDropdown
                            />
                            <Input label="Select Impact" size="norm" />
                        </div>
                        <Input label="Current State" size="big" />
                        <br />
                        <div style={{ display: 'flex', width: '150px' }}>
                            <button
                                type="submit"
                                className="submit-button"
                                onClick={() => CreateMission()}
                            >
                                ADD
                            </button>
                            <button
                                type="button"
                                className="cancel-btn"
                                onClick={() => CancelMission()}
                            >
                                Cancel
                            </button>
                        </div>
                        <br />
                        <h4 style={{ textAlign: 'left', margin: '0' }}>
                            Add Screenshots (4 max)
                        </h4>

                        <div className="image-upload">
                            <label htmlFor="file-input">
                                <MdUploadFile size={30} />
                            </label>
                            <input
                                type="file"
                                id="file-input"
                                accept="image/*"
                                multiple
                                onChange={handleFileInput}
                                style={{ display: 'none' }}
                            />
                            <div className="image-grid">{imageGrid}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}
