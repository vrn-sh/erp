name: deploy to prod or qa

on:
  workflow_run:
    workflows: ["frontend-lint", "api-unit-tests", "docker-compose-test"]
    branches: [current, next]
    types:
      - completed
  push:
    branches:
      - "current"
      - "next"

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: deploy to prod (if branch == canon)
      uses: appleboy/ssh-action@master

      if: ${GITHUB_REF##*/} == 'canon'
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd erp

          git switch current
          git checkout .

          git pull origin current

          printf '%s\n' ${{ secrets.PASSWORD }} | sudo -p "" -S docker compose --env-file api/.env down
          printf '%s\n' ${{ secrets.PASSWORD }} | sudo -p "" -S rm -rf ./volumes && docker system prune -af
          printf '%s\n' ${{ secrets.PASSWORD }} | sudo -p "" -S docker compose --env-file api/.env up -d

    - name: deploy to QA (if branch == next)
      uses: appleboy/ssh-action@master

      if: ${GITHUB_REF##*/} == 'next'
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd erp-preprod

          git switch next
          git checkout .

          git pull origin next

          # FIXME(clara): main address should come from domain name, not this
          find . -type f -name "config.ts" -print0 | xargs -0 sed -i "s/voron/v0ron/g"

          printf '%s\n' ${{ secrets.PASSWORD }} | sudo -p "" -S docker compose --env-file api/.env down
          printf '%s\n' ${{ secrets.PASSWORD }} | sudo -p "" -S rm -rf ./volumes && docker system prune -af # will be removed once ready for production
          printf '%s\n' ${{ secrets.PASSWORD }} | sudo -p "" -S docker compose --env-file api/.env up -d
